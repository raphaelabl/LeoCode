version: '3.1'
services:
  postgres-db:
    image: postgres:12.3
    container_name: postgres-db
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    networks:
      - quarkus

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: leocode-zookeeper
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - quarkus

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: leocode-kafka
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - quarkus

  backend:
    image: ghcr.io/musikfreunde/leocode-backend:26.0
    user: root
    container_name: backend
    volumes:
      - ./projects-in-queue:/projects-in-queue
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres-db:5432/db
      - QUARKUS_HTTP_CORS_METHODS=*
      - QUARKUS_HTTP_CORS=true
      - QUARKUS_HTTP_CORS_ORIGINS=*
      - QUARKUS_HTTP_CORS_HEADERS=*
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres-db
      - kafka
    ports:
      - "8181:9090"
    networks:
      - quarkus

  testing:
    image: ghcr.io/musikfreunde/testing-api:30.0
    user: root
    volumes:
      - ./projects-in-queue:/projects-in-queue
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - backend
    ports:
      - "8083:8083"
    networks:
      - quarkus

  frontend:
    image: zbenii/leofrontend:latest
    container_name: leofrontend
    ports:
      - "80:80"
    networks:
     - quarkus

  identity-provider:
    image: jboss/keycloak:11.0.2
    volumes:
      - ./school-realm.json:/tmp/school-realm.json
    command: [ '-b', '0.0.0.0', '-Dkeycloak.migration.action=import', '-Dkeycloak.profile.feature.upload_scripts=enabled', '-Dkeycloak.migration.provider=singleFile', '-Dkeycloak.migration.file=/tmp/school-realm.json' ]
    environment:
      KEYCLOAK_USER: leocode
      KEYCLOAK_PASSWORD: leocode
      DB_VENDOR: H2
    ports:
      - 8280:8080
    container_name: leocode-identity-provider
    networks:
      - quarkus

#  jenkins:
#    image: zbenii/leojenkins:latest
#    container_name: leojenkins
#    ports:
#    - "7070:8080"
#    networks:
#      - quarkus
volumes:
    projects-in-queue:

networks:
  quarkus:
    driver: bridge
